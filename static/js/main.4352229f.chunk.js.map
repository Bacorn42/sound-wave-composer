{"version":3,"sources":["components/roll/DisplaySettings.js","components/roll/NoteSettings.js","constants.js","tones.js","Note.js","components/roll/Display.js","waves/sine/tones.js","wav/WAVWriter.js","components/roll/Generator.js","components/roll/Roll.js","App.js","index.js"],"names":["DisplaySettings","setNewNoteLength","setBeatDivision","setTempo","useState","noteLength","setNoteLength","beats","setBeats","bpm","setBpm","className","value","onChange","e","val","target","NoteSettings","notes","draw","deleteNotes","tuningOffset","setTuningOffset","length","setLength","useEffect","getLength","onClick","SAMPLES","VOLUME","PX_TO_BEAT","PX_TO_TONE","A4","toneArray","reverse","toneNames","Note","x","y","this","width","height","offset","getX","getY","Display","setNotes","tempo","canvas","useRef","selectedNotes","setSelectedNotes","ctrlDown","setCtrlDown","newNoteLength","beatDivision","ctx","current","getContext","clearRect","font","lineWidth","strokeStyle","i","beginPath","moveTo","lineTo","WIDTH_UNITS","stroke","TONES","fillStyle","note","fillRect","includes","strokeRect","fillText","getMouseCoords","rect","getBoundingClientRect","clientX","left","clientY","top","ref","tabIndex","coords","inRect","snapX","Math","floor","snapY","onKeyDown","key","onKeyUp","filter","getTone","freq","arr","sin","PI","push","numberToBytes","num","numberOfBytes","bytes","Array","fill","byte","stringToBytes","str","split","map","c","charCodeAt","pushBigEndian","content","pushLittleEndian","getWAV","waveData","size","pushHeaders","pushWaveData","byteArray","Uint8Array","blob","Blob","type","window","URL","createObjectURL","Generator","setWaveData","normalize","max","reduce","SIZE","setTimeout","getOffset","wave","normalizedArr","src","controls","Roll","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4352229f.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './DisplaySettings.css';\r\n\r\nfunction DisplaySettings({ setNewNoteLength, setBeatDivision, setTempo }) {\r\n  const [noteLength, setNoteLength] = useState(1);\r\n  const [beats, setBeats] = useState(4);\r\n  const [bpm, setBpm] = useState(60);\r\n\r\n  const noteLengthHandler = (e) => {\r\n    const val = e.target.value;\r\n    setNoteLength(val);\r\n    setNewNoteLength(val);\r\n  }\r\n\r\n  const beatsHandler = (e) => {\r\n    const val = e.target.value;\r\n    setBeats(val);\r\n    setBeatDivision(val);\r\n  }\r\n\r\n  const bpmHandler = (e) => {\r\n    const val = e.target.value;\r\n    setBpm(val);\r\n    setTempo(val);\r\n  }\r\n\r\n  return (\r\n    <div className=\"display-settings\">\r\n      New note length <input value={noteLength} onChange={noteLengthHandler}></input>beats.<br />\r\n      Beat division <input value={beats} onChange={beatsHandler}></input>.<br />\r\n      Tempo <input value={bpm} onChange={bpmHandler}></input>bpm.\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplaySettings;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './NoteSettings.css';\r\n\r\nfunction NoteSettings({ notes, draw, deleteNotes }) {\r\n  const [tuningOffset, setTuningOffset] = useState(0);\r\n  const [length, setLength] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTuningOffset(notes[0].tuningOffset);\r\n    setLength(notes[0].getLength());\r\n  }, [notes])\r\n\r\n  const handleTuningOffset = (e) => {\r\n    const value = e.target.value;\r\n    setTuningOffset(value);\r\n    for(const note of notes) {\r\n      note.setTuningOffset(value);\r\n    }\r\n    draw();\r\n  }\r\n\r\n  const handleLength = (e) => {\r\n    const value = e.target.value;\r\n    setLength(value);\r\n    for(const note of notes) {\r\n      note.setLength(value);\r\n    }\r\n    draw();\r\n  }\r\n\r\n  return (\r\n    <div className=\"note-settings\">\r\n      Tuning offset <input value={tuningOffset} onChange={handleTuningOffset}></input> cents.<br />\r\n      Length <input value={length} onChange={handleLength}></input>beats.<br />\r\n      <button onClick={deleteNotes}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteSettings;\r\n","export const SAMPLES = 44100;\r\nexport const VOLUME = 25 * (32767/100);\r\n\r\nexport const PX_TO_BEAT = 20 * 4;\r\nexport const PX_TO_TONE = 20;","export const A4 = 440;\r\nexport const AS4 = A4 * (2**(1/12));\r\nexport const B4 = A4 * (2**(2/12));\r\nexport const C5 = A4 * (2**(3/12));\r\nexport const CS5 = A4 * (2**(4/12));\r\nexport const D5 = A4 * (2**(5/12));\r\nexport const DS5 = A4 * (2**(6/12));\r\nexport const E5 = A4 * (2**(7/12));\r\nexport const F5 = A4 * (2**(8/12));\r\nexport const FS5 = A4 * (2**(9/12));\r\nexport const G5 = A4 * (2**(10/12));\r\nexport const GS5 = A4 * (2**(11/12));\r\n\r\nexport const toneArray = [A4, AS4, B4, C5, CS5, D5, DS5, E5, F5, FS5, G5, GS5].reverse();\r\nexport const toneNames = ['A4', 'A♯4', 'B4', 'C5', 'C♯5', 'D5', 'D♯5', 'E5', 'F5', 'F♯5', 'G5', 'G♯5'].reverse();","import { PX_TO_BEAT, PX_TO_TONE } from './constants.js';\r\nimport { toneArray } from './tones.js';\r\n\r\nclass Note {\r\n  constructor(x, y, length) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = PX_TO_BEAT * length;\r\n    this.height = PX_TO_TONE;\r\n    this.tuningOffset = 0;\r\n    this.length = length;\r\n  }\r\n\r\n  getX() {\r\n    return this.x;\r\n  }\r\n\r\n  getY() {\r\n    return this.y - (this.tuningOffset/100 * PX_TO_TONE);\r\n  }\r\n\r\n  getOffset() {\r\n    return this.x / PX_TO_BEAT;\r\n  }\r\n\r\n  getTone() {\r\n    return toneArray[this.y / PX_TO_TONE] * (2**(this.tuningOffset/1200));\r\n  }\r\n\r\n  getLength() {\r\n    return this.length;\r\n  }\r\n\r\n  setLength(length) {\r\n    this.length = length;\r\n    this.width = PX_TO_BEAT * length;\r\n  }\r\n\r\n  setTuningOffset(offset) {\r\n    this.tuningOffset = offset;\r\n  }\r\n\r\n  inRect(x, y) {\r\n    return (x >= this.getX()) && (x <= this.getX() + this.width) && (y >= this.getY()) && (y <= this.getY() + this.height);\r\n  }\r\n}\r\n\r\nexport default Note;","import React, { useRef, useEffect, useState } from 'react';\r\nimport './Display.css';\r\nimport DisplaySettings from './DisplaySettings.js';\r\nimport NoteSettings from './NoteSettings.js';\r\nimport Note from '../../Note.js';\r\nimport { toneNames } from '../../tones.js';\r\nimport { PX_TO_BEAT, PX_TO_TONE } from '../../constants.js';\r\n\r\nconst TONES = 12;\r\nconst WIDTH_UNITS = 20;\r\nconst HEIGHT = TONES * PX_TO_TONE;\r\nconst WIDTH = WIDTH_UNITS * 20;\r\nconst BEATS = 5;\r\n\r\nfunction Display({ notes, setNotes, tempo, setTempo }) {\r\n  const canvas = useRef(null);\r\n  const [selectedNotes, setSelectedNotes] = useState([]);\r\n  const [ctrlDown, setCtrlDown] = useState(false);\r\n  const [newNoteLength, setNewNoteLength] = useState(1);\r\n  const [beatDivision, setBeatDivision] = useState(4);\r\n\r\n  const draw = () => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\r\n    ctx.font = '16px sans-serif';\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#666';\r\n    for(let i = 1; i < TONES; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, PX_TO_TONE * i + 0.5);\r\n      ctx.lineTo(WIDTH, PX_TO_TONE * i +0.5);\r\n      ctx.stroke();\r\n    }\r\n    for(let i = 1; i < BEATS * beatDivision; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(PX_TO_BEAT/beatDivision * i + 0.5, 0);\r\n      ctx.lineTo(PX_TO_BEAT/beatDivision * i + 0.5, HEIGHT);\r\n      ctx.stroke();\r\n    }\r\n    ctx.fillStyle = '#ccc';\r\n    for(const note of notes) {\r\n      ctx.fillRect(note.getX() + 2, note.getY() + 2, note.width - 3, note.height - 3);\r\n      ctx.strokeStyle = (selectedNotes.includes(note)) ? '#900' : '#666';\r\n      ctx.lineWidth = 2;\r\n      ctx.strokeRect(note.getX() + 2.5, note.getY() + 2.5, note.width - 4, note.height - 4);\r\n    }\r\n    ctx.fillStyle = '#000';\r\n    for(let i = 0; i < TONES; i++) {\r\n      ctx.fillText(toneNames[i], 0, PX_TO_TONE * (i + 1) - 4);\r\n    }\r\n  }\r\n\r\n  const clickHandler = (e) => {\r\n    const coords = getMouseCoords(e);\r\n    for(const note of notes) {\r\n      if(note.inRect(coords.x, coords.y)) {\r\n        if(ctrlDown) {\r\n          setSelectedNotes(selectedNotes => [...selectedNotes, note]);\r\n        }\r\n        else {\r\n          setSelectedNotes([note]);\r\n        }\r\n        draw();\r\n        return;\r\n      }\r\n    }\r\n    const snapX = Math.floor((coords.x)/(PX_TO_BEAT/beatDivision)) * (PX_TO_BEAT/beatDivision);\r\n    const snapY = Math.floor((coords.y)/WIDTH_UNITS) * WIDTH_UNITS;\r\n    setNotes([...notes, new Note(snapX, snapY, newNoteLength)])\r\n    setSelectedNotes([]);\r\n    draw();\r\n  }\r\n\r\n  const getMouseCoords = (e) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    const mouseX = e.clientX - rect.left;\r\n    const mouseY = e.clientY - rect.top;\r\n    return {\r\n      x: mouseX,\r\n      y: mouseY,\r\n    };\r\n  }\r\n\r\n  const keyDownHandler = (e) => {\r\n    if(e.key === \"Control\") {\r\n      setCtrlDown(true);\r\n    }\r\n  }\r\n\r\n  const keyUpHandler = (e) => {\r\n    if(e.key === \"Control\") {\r\n      setCtrlDown(false);\r\n    }\r\n  }\r\n\r\n  const clear = () => {\r\n    setNotes([]);\r\n    setSelectedNotes([]);\r\n    draw();\r\n  }\r\n\r\n  const deleteNotes = () => {\r\n    setNotes(notes.filter(note => selectedNotes.includes(note)));\r\n    setSelectedNotes([]);\r\n  }\r\n\r\n  const newNoteLengthHandler = (val) => {\r\n    setNewNoteLength(val);\r\n  }\r\n\r\n  const beatDivisionHandler = (val) => {\r\n    setBeatDivision(val);\r\n  }\r\n\r\n  const tempoHandler = (val) => {\r\n    setTempo(val);\r\n  }\r\n\r\n  useEffect(() => draw());\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <DisplaySettings setNewNoteLength={newNoteLengthHandler} setBeatDivision={beatDivisionHandler}\r\n                       setTempo={tempoHandler}></DisplaySettings>\r\n      <div className=\"display-canvas\">\r\n        <canvas ref={canvas} width={WIDTH} height={HEIGHT} tabIndex=\"0\"\r\n                onClick={clickHandler} onKeyDown={keyDownHandler} onKeyUp={keyUpHandler}></canvas>\r\n        <button onClick={clear}>Clear</button>\r\n      </div>\r\n      {(selectedNotes.length > 0) && <NoteSettings notes={selectedNotes} draw={draw} deleteNotes={deleteNotes}></NoteSettings>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import { SAMPLES, VOLUME } from '../../constants.js';\r\n\r\nexport function getTone(freq, length) {\r\n  const arr = []\r\n  for(let i = 0; i < SAMPLES * length; i++) {\r\n      const val = Math.floor(Math.sin(freq * 2 * Math.PI * (i/SAMPLES)) * VOLUME);\r\n      arr.push(val);\r\n      arr.push(val);\r\n  }\r\n  return arr;\r\n}","import { SAMPLES } from '../constants.js';\r\n\r\nfunction numberToBytes(num, numberOfBytes) {\r\n  const bytes = new Array(numberOfBytes).fill(0);\r\n  for(let i = 0; i < numberOfBytes; i++) {\r\n      const byte = (num >> (8*i)) & 0xFF;\r\n      bytes[i] = byte;\r\n  }\r\n  bytes.reverse();\r\n  return bytes;\r\n}\r\n\r\nfunction stringToBytes(str) {\r\n  return str.split('').map(c => c.charCodeAt(0));\r\n}\r\n\r\nfunction pushBigEndian(arr, content) {\r\n  for(const val of content) {\r\n      arr.push(val);\r\n  }\r\n}\r\n\r\nfunction pushLittleEndian(arr, content) {\r\n  for(let i = content.length - 1; i >= 0; i--) {\r\n      arr.push(content[i]);\r\n  }\r\n}\r\n\r\nfunction pushWaveData(arr, waveData) {\r\n  for(const val of waveData) {\r\n      pushLittleEndian(arr, numberToBytes(val, 2));\r\n  }\r\n}\r\n\r\nfunction pushHeaders(arr, size) {\r\n  pushBigEndian(arr, stringToBytes(\"RIFF\"));\r\n  pushLittleEndian(arr, numberToBytes(36 + size, 4));\r\n  pushBigEndian(arr, stringToBytes(\"WAVE\"));\r\n  pushBigEndian(arr, stringToBytes(\"fmt \"));\r\n  pushLittleEndian(arr, numberToBytes(16, 4));\r\n  pushLittleEndian(arr, numberToBytes(1, 2));\r\n  pushLittleEndian(arr, numberToBytes(2, 2));\r\n  pushLittleEndian(arr, numberToBytes(SAMPLES, 4));\r\n  pushLittleEndian(arr, numberToBytes(SAMPLES * 4, 4));\r\n  pushLittleEndian(arr, numberToBytes(4, 2));\r\n  pushLittleEndian(arr, numberToBytes(16, 2));\r\n  pushBigEndian(arr, stringToBytes(\"data\"));\r\n  pushLittleEndian(arr, numberToBytes(size, 4));\r\n}\r\n\r\nfunction getWAV(waveData, size) {\r\n  const arr = [];\r\n\r\n  pushHeaders(arr, size);\r\n  pushWaveData(arr, waveData);\r\n    \r\n  const byteArray = new Uint8Array(arr);\r\n  const blob = new Blob([byteArray], { type: 'application/octet-stream' });\r\n\r\n  return window.URL.createObjectURL(blob);\r\n}\r\n\r\nexport default getWAV;","import React, { useState } from 'react';\r\nimport './Generator.css';\r\nimport { getTone } from '../../waves/sine/tones.js';\r\nimport getWAV from '../../wav/WAVWriter.js';\r\nimport { SAMPLES, VOLUME } from '../../constants.js';\r\n\r\nfunction Generator({ notes, tempo }) {\r\n  let [waveData, setWaveData] = useState(null);\r\n  const clickHandler = () => {\r\n    const LENGTH = 5 / (tempo/60);\r\n    const SIZE = SAMPLES * 4 * LENGTH;\r\n    setWaveData(0);\r\n    setTimeout(() => {\r\n      const arr = new Array(SIZE).fill(0);\r\n      for(const note of notes) {\r\n        const offset = note.getOffset() / (tempo/60);\r\n        const wave = getTone(note.getTone(), note.getLength() / (tempo/60));\r\n        for(let i = 0; i < wave.length; i++) {\r\n          const arrIndex = Math.floor(SAMPLES * 2 * offset) + i;\r\n          arr[arrIndex] += wave[i];\r\n        }\r\n      }\r\n      const normalizedArr = normalize(arr);\r\n      setWaveData(getWAV(normalizedArr, SIZE));\r\n    }, 0);\r\n  }\r\n\r\n  const normalize = (arr) => {\r\n    const max = arr.reduce((max, x) => Math.max(max, x), 0);\r\n    if(max > VOLUME) {\r\n      return arr.map(x => Math.floor(x * (VOLUME/max)));\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  const getAudio = () => {\r\n    if(waveData) {\r\n      return <audio src={waveData} controls></audio>;\r\n    }\r\n    if(waveData === 0) {\r\n      return <div>Generating...</div>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"generator\">\r\n      <button onClick={clickHandler}>Generate!</button>\r\n      {getAudio()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Generator;\r\n","import React, { useState } from 'react';\r\nimport Display from './Display.js';\r\nimport Generator from './Generator.js';\r\n\r\nfunction Roll() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [tempo, setTempo] = useState(60);\r\n\r\n  return (\r\n    <div>\r\n      <Display notes={notes} setNotes={setNotes} tempo={tempo} setTempo={setTempo}></Display>\r\n      <Generator notes={notes} tempo={tempo}></Generator>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Roll;\r\n","import Roll from './components/roll/Roll.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Roll></Roll>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}