{"version":3,"sources":["noteColors.js","components/roll/NoteSettings.js","tones.js","constants.js","waves/waveFunctions.js","components/roll/Canvas.js","components/roll/DisplaySettings.js","Note.js","components/roll/Display.js","audio/Oscillator.js","audio/Patch.js","models/synth/oscillator.js","models/synth/patch.js","audio/defaultPatches.js","audio/AudioEngine.js","components/roll/Roll.js","components/synth/Oscillator.js","components/synth/OscillatorContainer.js","components/synth/Patch.js","components/synth/PatchContainer.js","components/synth/Synth.js","App.js","index.js"],"names":["NoteSettings","notes","draw","deleteNotes","useState","tuningOffset","setTuningOffset","length","setLength","useEffect","getLength","className","value","onChange","e","target","Number","onClick","A4","toneArray","reverse","toneNames","PX_TO_BEAT","PX_TO_TONE","sine","freq","t","Math","sin","PI","square","sign","sawtooth","floor","triangle","abs","colors","waveNames","Object","keys","waveFunctions","noteColors","i","TONES","HEIGHT","WIDTH","BEATS","CANVAS_HEIGHT","getBeatsNum","reduce","maxBeat","note","max","getBeatEnd","getScrollLength","min","getScrollRange","Canvas","setNotes","beatDivision","makeNewNote","canvas","useRef","selectedNotes","setSelectedNotes","ctrlDown","setCtrlDown","scrolling","setScrolling","scrollOffset","setScrollOffset","getBeatStart","scrollRange","scrollProportion","ctx","current","getContext","clearRect","drawGrid","drawNotes","drawToneNames","drawScrollbar","lineWidth","strokeStyle","drawGridHorizontal","drawGridVertical","y","beginPath","moveTo","lineTo","stroke","beatStart","lines","offset","beatDivisionWidth","x","beatEnd","inView","noteX","getOffset","noteY","getY","fillStyle","func","fillRect","width","height","includes","strokeRect","font","fillText","scrollLength","selectNote","getMouseCoords","rect","getBoundingClientRect","clientX","left","clientY","top","ref","tabIndex","coords","pxStart","inRect","snapX","snapY","newNote","onKeyDown","key","onKeyUp","onMouseDown","onMouseMove","newOffset","movementX","onMouseUp","newNotes","filter","DisplaySettings","setNewNoteLength","setBeatDivision","setTempo","setWaveFunction","patches","noteLength","setNoteLength","beats","setBeats","bpm","setBpm","setFunc","val","map","patch","getName","Note","this","getX","Display","newNoteLength","waveFunction","Oscillator","type","output","osc","createOscillator","frequency","setValueAtTime","currentTime","connect","start","stop","Patch","tone","volume","oscillators","getOscillators","forEach","push","getWaveType","getTone","getTune","getFineTune","waveType","tune","fineTune","name","id","currentId","newOscillators","getDefaultPatch","setWaveType","setOscillators","AudioEngine","window","AudioContext","webkitAudioContext","createGain","destination","gain","interval","tempo","timePerPixel","sortedNotes","sort","a","b","lastNote","last","startTime","Date","setInterval","pixel","getType","find","clearInterval","Roll","engine","oscillator","setOscillator","index","setTune","setFineTune","OscillatorContainer","newOscillator","patchId","setPatch","setName","PatchContainer","newPatch","currentPatch","setCurrentPatch","getId","getPatch","Synth","App","setPatches","newPatches","findIndex","p","PatchModel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec0c9ed1.chunk.js","sourcesContent":["import * as waveFunctions from './waves/waveFunctions.js';\r\n\r\nconst colors = ['#0c0', '#c00', '#cc0', '#00c'];\r\nconst waveNames = Object.keys(waveFunctions);\r\nconst noteColors = {};\r\n\r\nfor(let i = 0; i < colors.length; i++) {\r\n  noteColors[waveNames[i]] = colors[i];\r\n}\r\n\r\nexport default noteColors;","import React, { useState, useEffect } from 'react';\r\nimport './NoteSettings.css';\r\n\r\nfunction NoteSettings({ notes, draw, deleteNotes }) {\r\n  const [tuningOffset, setTuningOffset] = useState(0);\r\n  const [length, setLength] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTuningOffset(notes[0].tuningOffset);\r\n    setLength(notes[0].getLength());\r\n  }, [notes])\r\n\r\n  const handleTuningOffset = (e) => {\r\n    const value = e.target.value;\r\n    setTuningOffset(value);\r\n    for(const note of notes) {\r\n      note.setTuningOffset(Number(value));\r\n    }\r\n    draw();\r\n  }\r\n\r\n  const handleLength = (e) => {\r\n    const value = e.target.value;\r\n    setLength(value);\r\n    for(const note of notes) {\r\n      note.setLength(Number(value));\r\n    }\r\n    draw();\r\n  }\r\n\r\n  return (\r\n    <div className=\"note-settings\">\r\n      Tuning offset <input value={tuningOffset} onChange={handleTuningOffset}></input> cents.<br />\r\n      Length <input value={length} onChange={handleLength}></input>beats.<br />\r\n      <button onClick={deleteNotes}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteSettings;\r\n","export const A4 = 440;\r\nexport const AS4 = A4 * (2**(1/12));\r\nexport const B4 = A4 * (2**(2/12));\r\nexport const C5 = A4 * (2**(3/12));\r\nexport const CS5 = A4 * (2**(4/12));\r\nexport const D5 = A4 * (2**(5/12));\r\nexport const DS5 = A4 * (2**(6/12));\r\nexport const E5 = A4 * (2**(7/12));\r\nexport const F5 = A4 * (2**(8/12));\r\nexport const FS5 = A4 * (2**(9/12));\r\nexport const G5 = A4 * (2**(10/12));\r\nexport const GS5 = A4 * (2**(11/12));\r\n\r\nexport const toneArray = [A4, AS4, B4, C5, CS5, D5, DS5, E5, F5, FS5, G5, GS5].reverse();\r\nexport const toneNames = ['A4', 'A♯4', 'B4', 'C5', 'C♯5', 'D5', 'D♯5', 'E5', 'F5', 'F♯5', 'G5', 'G♯5'].reverse();","export const SAMPLES = 44100;\r\nexport const VOLUME = 25 * (32767/100);\r\n\r\nexport const PX_TO_BEAT = 20 * 4;\r\nexport const PX_TO_TONE = 20;","export const sine = (freq, t) => Math.sin(2 * Math.PI * freq * t);\r\n\r\nexport const square = (freq, t) => Math.sign(sine(freq, t));\r\n\r\nexport const sawtooth = (freq, t) => 2 * (t * freq - Math.floor(1/2 + t * freq));\r\n\r\nexport const triangle = (freq, t) => 2 * Math.abs(sawtooth(freq, t)) - 1;","import React, { useState, useRef, useEffect } from 'react';\r\nimport NoteSettings from './NoteSettings.js';\r\nimport { toneNames } from '../../tones.js';\r\nimport { PX_TO_BEAT, PX_TO_TONE } from '../../constants.js';\r\nimport noteColors from '../../noteColors.js';\r\nimport './Canvas.css';\r\n\r\nconst TONES = toneNames.length;\r\nconst BEATS = 5;\r\nconst HEIGHT = TONES * PX_TO_TONE;\r\nconst WIDTH = BEATS * PX_TO_BEAT;\r\nconst CANVAS_WIDTH = WIDTH;\r\nconst CANVAS_HEIGHT = HEIGHT + 16;\r\n\r\nconst getBeatsNum = (notes) => {\r\n  return notes.reduce((maxBeat, note) => Math.max(maxBeat, note.getBeatEnd()), 0);\r\n}\r\n\r\nconst getScrollLength = (notes) => {\r\n  return Math.min(WIDTH/((getBeatsNum(notes) + 2) * PX_TO_BEAT), 1) * WIDTH;\r\n}\r\n\r\nconst getScrollRange = (notes) => {\r\n  return WIDTH - getScrollLength(notes);\r\n}\r\n\r\nfunction Canvas({ notes, setNotes, beatDivision, makeNewNote }) {\r\n  const canvas = useRef(null);\r\n  const [selectedNotes, setSelectedNotes] = useState([]);\r\n  const [ctrlDown, setCtrlDown] = useState(false);\r\n  const [scrolling, setScrolling] = useState(false);\r\n  const [scrollOffset, setScrollOffset] = useState(0);\r\n\r\n  const getBeatStart = () => {\r\n    const scrollRange = getScrollRange(notes);\r\n    if(scrollRange === 0) {\r\n      return 0;\r\n    }\r\n    const scrollProportion = scrollOffset/scrollRange;\r\n    return (getBeatsNum(notes) - 3) * scrollProportion;\r\n  }\r\n\r\n  const draw = () => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    ctx.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    drawGrid(ctx);\r\n    drawNotes(ctx);\r\n    drawToneNames(ctx);\r\n    drawScrollbar(ctx);\r\n  }\r\n\r\n  const drawGrid = (ctx) => {\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#666';\r\n    drawGridHorizontal(ctx);\r\n    drawGridVertical(ctx);\r\n  }\r\n\r\n  const drawGridHorizontal = (ctx) => {\r\n    for(let i = 1; i <= TONES; i++) {\r\n      const y = PX_TO_TONE * i + 0.5;\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, y);\r\n      ctx.lineTo(WIDTH, y);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  const drawGridVertical = (ctx) => {\r\n    const beatStart = getBeatStart();\r\n    const lines = (BEATS + 1) * beatDivision;\r\n    for(let i = 1; i <= lines; i++) {\r\n      const offset = (beatStart % 1) * beatDivision;\r\n      const beatDivisionWidth = PX_TO_BEAT/beatDivision;\r\n      const x = Math.floor(beatDivisionWidth * (i - offset)) + 0.5;\r\n      ctx.lineWidth = (i % beatDivision === 0) ? 3 : 1;\r\n      ctx.beginPath();\r\n      ctx.moveTo(x, 0);\r\n      ctx.lineTo(x, HEIGHT);\r\n      ctx.stroke();\r\n    }\r\n  }\r\n\r\n  const drawNotes = (ctx) => {\r\n    const beatStart = getBeatStart();\r\n    const beatEnd = beatStart + BEATS;\r\n\r\n    for(const note of notes) {\r\n      if(note.inView(beatStart, beatEnd)) {\r\n        const noteX = (note.getOffset() - beatStart) * PX_TO_BEAT;\r\n        const noteY = note.getY();\r\n        ctx.fillStyle = noteColors[note.func];\r\n        ctx.fillRect(noteX + 2, noteY + 2, note.width - 3, note.height - 3);\r\n        ctx.strokeStyle = (selectedNotes.includes(note)) ? '#900' : '#666';\r\n        ctx.lineWidth = 2;\r\n        ctx.strokeRect(noteX + 2.5, noteY + 2.5, note.width - 4, note.height - 4);\r\n      }\r\n    }\r\n  }\r\n\r\n  const drawToneNames = (ctx) => {\r\n    ctx.font = '16px sans-serif';\r\n    ctx.fillStyle = '#000';\r\n    for(let i = 0; i < TONES; i++) {\r\n      ctx.fillText(toneNames[i], 0, PX_TO_TONE * (i + 1) - 4);\r\n    }\r\n  }\r\n\r\n  const drawScrollbar = (ctx) => {\r\n    const scrollLength = getScrollLength(notes);\r\n    ctx.fillStyle = '#999';\r\n    ctx.fillRect(scrollOffset, HEIGHT, scrollLength, 16);\r\n  }\r\n\r\n  const clickHandler = (e) => {\r\n    const coords = getMouseCoords(e);\r\n    if(coords.y >= HEIGHT) {\r\n      return;\r\n    }\r\n    const beatStart = getBeatStart();\r\n    const pxStart = beatStart * PX_TO_BEAT;\r\n    for(const note of notes) {\r\n      if(note.inRect(coords.x + pxStart, coords.y)) {\r\n        selectNote(note);\r\n        draw();\r\n        return;\r\n      }\r\n    }\r\n    const beatDivisionWidth = PX_TO_BEAT/beatDivision;\r\n    const snapX = Math.floor((coords.x + pxStart)/beatDivisionWidth) * beatDivisionWidth;\r\n    const snapY = Math.floor(coords.y/PX_TO_TONE) * PX_TO_TONE;\r\n    const scrollProportion = scrollOffset/getScrollLength(notes);\r\n    \r\n    const newNote = makeNewNote(snapX, snapY);\r\n    setSelectedNotes([]);\r\n    setScrollOffset(scrollProportion * getScrollLength([...notes, newNote]));\r\n    draw();\r\n  }\r\n\r\n  const selectNote = (note) => {\r\n    if(ctrlDown) {\r\n      setSelectedNotes([...selectedNotes, note]);\r\n    }\r\n    else {\r\n      setSelectedNotes([note]);\r\n    }\r\n  }\r\n\r\n  const mouseDownHandler = (e) => {\r\n    const coords = getMouseCoords(e);\r\n    if(coords.y >= HEIGHT) {\r\n      setScrolling(true);\r\n    }\r\n  }\r\n\r\n  const mouseMoveHandler = (e) => {\r\n    if(scrolling) {\r\n      let newOffset = scrollOffset + e.movementX;\r\n      newOffset = Math.max(newOffset, 0);\r\n      newOffset = Math.min(newOffset, getScrollRange(notes));\r\n      setScrollOffset(newOffset);\r\n    }\r\n  }\r\n\r\n  const mouseUpHandler = (e) => {\r\n    setScrolling(false);\r\n  }\r\n\r\n  const getMouseCoords = (e) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    const mouseX = e.clientX - rect.left;\r\n    const mouseY = e.clientY - rect.top;\r\n    return {\r\n      x: mouseX,\r\n      y: mouseY,\r\n    };\r\n  }\r\n\r\n  const keyDownHandler = (e) => {\r\n    if(e.key === \"Control\") {\r\n      setCtrlDown(true);\r\n    }\r\n  }\r\n\r\n  const keyUpHandler = (e) => {\r\n    if(e.key === \"Control\") {\r\n      setCtrlDown(false);\r\n    }\r\n  }\r\n\r\n  const deleteNotes = () => {\r\n    const newNotes = notes.filter(note => !selectedNotes.includes(note))\r\n    setNotes([...newNotes]);\r\n    setSelectedNotes([]);\r\n    setScrollOffset(Math.min(scrollOffset, getScrollRange(newNotes)));\r\n  }\r\n\r\n  const clear = () => {\r\n    setNotes([]);\r\n    setSelectedNotes([]);\r\n    setScrollOffset(0);\r\n    draw();\r\n  }\r\n\r\n  useEffect(() => draw());\r\n\r\n  return (\r\n    <div className=\"canvas\">\r\n      <div className=\"canvas-wrapper\">\r\n        <canvas ref={canvas} width={CANVAS_WIDTH} height={CANVAS_HEIGHT} tabIndex=\"0\"\r\n          onClick={clickHandler} onKeyDown={keyDownHandler} onKeyUp={keyUpHandler}\r\n          onMouseDown={mouseDownHandler} onMouseMove={mouseMoveHandler} onMouseUp={mouseUpHandler}>\r\n        </canvas>\r\n        <button onClick={clear}>Clear</button>\r\n      </div>\r\n      {(selectedNotes.length > 0) && <NoteSettings notes={selectedNotes} draw={draw} deleteNotes={deleteNotes}></NoteSettings>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Canvas\r\n","import React, { useState } from 'react';\r\nimport * as waveFunctions from '../../waves/waveFunctions.js';\r\nimport './DisplaySettings.css';\r\n\r\nfunction DisplaySettings({ setNewNoteLength, setBeatDivision, setTempo, setWaveFunction, patches }) {\r\n  const [noteLength, setNoteLength] = useState(1);\r\n  const [beats, setBeats] = useState(4);\r\n  const [bpm, setBpm] = useState(60);\r\n  const [func, setFunc] = useState('sine');\r\n\r\n  const noteLengthHandler = (e) => {\r\n    const val = e.target.value;\r\n    setNoteLength(val);\r\n    setNewNoteLength(val);\r\n  }\r\n\r\n  const beatsHandler = (e) => {\r\n    const val = e.target.value;\r\n    setBeats(val);\r\n    setBeatDivision(val);\r\n  }\r\n\r\n  const bpmHandler = (e) => {\r\n    const val = e.target.value;\r\n    setBpm(val);\r\n    setTempo(val);\r\n  }\r\n\r\n  const waveHandler = (e) => {\r\n    const val = e.target.value;\r\n    setFunc(val);\r\n    setWaveFunction(val);\r\n  }\r\n\r\n  const getWaves = () => {\r\n    return [...Object.keys(waveFunctions), ...patches.map(patch => patch.getName())];\r\n  }\r\n\r\n  return (\r\n    <div className=\"display-settings\">\r\n      New note length <input value={noteLength} onChange={noteLengthHandler}></input>beats.<br />\r\n      Beat division <input value={beats} onChange={beatsHandler}></input>.<br />\r\n      Tempo <input value={bpm} onChange={bpmHandler}></input>bpm.<br />\r\n      Wave <select value={func} onChange={waveHandler}>\r\n        {getWaves().map(x => <option value={x} key={x}>{x}</option>)}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplaySettings;\r\n","import { PX_TO_BEAT, PX_TO_TONE } from './constants.js';\r\nimport { toneArray } from './tones.js';\r\n\r\nclass Note {\r\n  constructor(x, y, length, func) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = PX_TO_BEAT * length;\r\n    this.height = PX_TO_TONE;\r\n    this.tuningOffset = 0;\r\n    this.length = length;\r\n    this.func = func;\r\n  }\r\n\r\n  getX() {\r\n    return this.x;\r\n  }\r\n\r\n  getY() {\r\n    return this.y - (this.tuningOffset/100 * PX_TO_TONE);\r\n  }\r\n\r\n  getOffset() {\r\n    return this.x / PX_TO_BEAT;\r\n  }\r\n\r\n  getTone() {\r\n    return toneArray[this.y / PX_TO_TONE] * (2**(this.tuningOffset/1200));\r\n  }\r\n\r\n  getLength() {\r\n    return this.length;\r\n  }\r\n\r\n  getBeatEnd() {\r\n    return this.getOffset() + this.getLength();\r\n  }\r\n\r\n  getType() {\r\n    return this.func;\r\n  }\r\n\r\n  setLength(length) {\r\n    this.length = length;\r\n    this.width = PX_TO_BEAT * length;\r\n  }\r\n\r\n  setTuningOffset(offset) {\r\n    this.tuningOffset = offset;\r\n  }\r\n\r\n  inRect(x, y) {\r\n    return (x >= this.getX()) && (x <= this.getX() + this.width) && (y >= this.getY()) && (y <= this.getY() + this.height);\r\n  }\r\n\r\n  inView(beatStart, beatEnd) {\r\n    return (this.getOffset() < beatEnd) || (this.getBeatEnd() > beatStart);\r\n  }\r\n}\r\n\r\nexport default Note;","import React, { useState } from 'react';\r\nimport './Display.css';\r\nimport Canvas from './Canvas.js';\r\nimport DisplaySettings from './DisplaySettings.js';\r\nimport Note from '../../Note.js';\r\n\r\nfunction Display({ notes, setNotes, setTempo, patches }) {\r\n  const [newNoteLength, setNewNoteLength] = useState(1);\r\n  const [beatDivision, setBeatDivision] = useState(4);\r\n  const [waveFunction, setWaveFunction] = useState('sine');\r\n  \r\n  const makeNewNote = (x, y) => {\r\n    const newNote = new Note(x, y, Number(newNoteLength), waveFunction);\r\n    const newNotes = [...notes, newNote];\r\n    setNotes([...newNotes]);\r\n    return newNote;\r\n  }\r\n\r\n  const newNoteLengthHandler = (val) => {\r\n    setNewNoteLength(val);\r\n  }\r\n\r\n  const beatDivisionHandler = (val) => {\r\n    setBeatDivision(val);\r\n  }\r\n\r\n  const tempoHandler = (val) => {\r\n    setTempo(val);\r\n  }\r\n\r\n  const waveFunctionHandler = (val) => {\r\n    setWaveFunction(val);\r\n  }\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <DisplaySettings setNewNoteLength={newNoteLengthHandler} setBeatDivision={beatDivisionHandler}\r\n                       setTempo={tempoHandler} setWaveFunction={waveFunctionHandler} patches={patches}></DisplaySettings>\r\n      <Canvas notes={notes} setNotes={setNotes} beatDivision={beatDivision} makeNewNote={makeNewNote}></Canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","class Oscillator {\r\n  constructor(type, freq, length, ctx, output) {\r\n    this.osc = ctx.createOscillator();\r\n\r\n    this.osc.type = type;\r\n    this.osc.frequency.setValueAtTime(freq, ctx.currentTime);\r\n    this.osc.connect(output);\r\n    this.osc.start();\r\n    this.osc.stop(ctx.currentTime + length / 1000);\r\n  }\r\n\r\n  stop() {\r\n    this.osc.stop();\r\n  }\r\n}\r\n\r\nexport default Oscillator;","import Oscillator from \"./Oscillator\";\r\n\r\nclass Patch {\r\n  constructor(patch, tone, length, ctx, volume) {\r\n    this.patch = patch;\r\n    this.oscillators = [];\r\n    this.patch.getOscillators().forEach(osc => this.oscillators.push(new Oscillator(\r\n      osc.getWaveType(), this.getTone(osc, tone), length, ctx, volume\r\n    )));\r\n  }\r\n\r\n  getTone(osc, tone) {\r\n    const tuningOffset = osc.getTune() * 100 + osc.getFineTune();\r\n    return tone * (2**(tuningOffset/1200));\r\n  }\r\n\r\n  stop() {\r\n    this.oscillators.forEach(osc => osc.stop());\r\n    this.oscillators = [];\r\n  }\r\n}\r\n\r\nexport default Patch;","class Oscillator {\r\n  constructor() {\r\n    this.waveType = 'sine';\r\n    this.tune = 0;\r\n    this.fineTune = 0;\r\n  }\r\n\r\n  setWaveType(waveType) {\r\n    this.waveType = waveType;\r\n  }\r\n\r\n  setTune(tune) {\r\n    this.tune = tune;\r\n  }\r\n\r\n  setFineTune(fineTune) {\r\n    this.fineTune = fineTune;\r\n  }\r\n\r\n  getWaveType() {\r\n    return this.waveType;\r\n  }\r\n\r\n  getTune() {\r\n    return this.tune;\r\n  }\r\n\r\n  getFineTune() {\r\n    return this.fineTune;\r\n  }\r\n}\r\n\r\nexport default Oscillator;","import Oscillator from \"./oscillator.js\";\r\n\r\nclass Patch {\r\n  static currentId = 0;\r\n\r\n  constructor() {\r\n    this.name = 'Patch';\r\n    this.id = Patch.currentId;\r\n    this.oscillators = [];\r\n    Patch.currentId++;\r\n  }\r\n\r\n  newOscillator() {\r\n    const newOscillators = [...this.oscillators, new Oscillator()];\r\n    this.oscillators = newOscillators;\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  setOscillators(oscillators) {\r\n    this.oscillators = oscillators;\r\n  }\r\n\r\n  getName() {\r\n    return this.name;\r\n  }\r\n\r\n  getId() {\r\n    return this.name + '_' + this.id;\r\n  }\r\n\r\n  getOscillators() {\r\n    return this.oscillators;\r\n  }\r\n}\r\n\r\nexport default Patch;","import Patch from '../models/synth/patch.js';\r\nimport Oscillator from '../models/synth/oscillator.js';\r\n\r\nconst getDefaultPatch = (type) => {\r\n  const osc = new Oscillator();\r\n  osc.setWaveType(type);\r\n  const patch = new Patch();\r\n  patch.setOscillators([osc]);\r\n  return patch;\r\n}\r\n\r\nexport default getDefaultPatch;","import Patch from './Patch.js';\r\nimport getDefaultPatch from './defaultPatches.js';\r\nimport { PX_TO_BEAT } from '../constants.js';\r\n\r\nclass AudioEngine {\r\n  constructor() {\r\n    this.ctx = new (window.AudioContext || window.webkitAudioContext)();\r\n    this.volume = this.ctx.createGain();\r\n    this.volume.connect(this.ctx.destination);\r\n    this.volume.gain.setValueAtTime(0.25, this.ctx.currentTime);\r\n\r\n    this.patches = [];\r\n    this.interval = null;\r\n  }\r\n\r\n  start(notes, tempo, patches) {\r\n    this.stop();\r\n    const timePerPixel = (60 * 1000)/(tempo * PX_TO_BEAT);\r\n    const sortedNotes = [...notes].sort((a,b) => a.getOffset() - b.getOffset());\r\n    let current = 0;\r\n    const lastNote = sortedNotes.reduce((last, note) => Math.max(last, note.getBeatEnd()), 0) * PX_TO_BEAT;\r\n    const startTime = new Date();\r\n    \r\n    this.interval = setInterval(() => {\r\n      const timeElapsed = new Date() - startTime;\r\n      const pixel = timeElapsed/timePerPixel;\r\n      while(current < sortedNotes.length && sortedNotes[current].getX() <= pixel) {\r\n        const note = sortedNotes[current];\r\n        const length = note.getLength() * PX_TO_BEAT * timePerPixel;\r\n        if(['sine', 'square', 'sawtooth', 'triangle'].includes(note.getType())) {\r\n          const patch = getDefaultPatch(note.getType());\r\n          this.patches.push(new Patch(patch, note.getTone(), length, this.ctx, this.volume));\r\n        }\r\n        else {\r\n          const patch = patches.find(patch => patch.getName() === note.getType());\r\n          this.patches.push(new Patch(patch, note.getTone(), length, this.ctx, this.volume));\r\n        }\r\n        current++;\r\n      }\r\n      if(pixel >= lastNote) {\r\n        this.stop();\r\n      }\r\n    }, timePerPixel);\r\n  }\r\n\r\n  stop() {\r\n    this.patches.forEach(patch => patch.stop());\r\n    this.patches = [];\r\n    clearInterval(this.interval);\r\n  }\r\n}\r\n\r\nexport default AudioEngine;","import React, { useState } from 'react';\r\nimport Display from './Display.js';\r\nimport AudioEngine from '../../audio/AudioEngine.js';\r\n\r\nfunction Roll({ patches }) {\r\n  const [notes, setNotes] = useState([]);\r\n  const [tempo, setTempo] = useState(60);\r\n  const [engine] = useState(new AudioEngine());\r\n\r\n  const play = () => {\r\n    engine.start(notes, tempo, patches);\r\n  }\r\n\r\n  const stop = () => {\r\n    engine.stop();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Display notes={notes} setNotes={setNotes} tempo={tempo} setTempo={setTempo} patches={patches}></Display>\r\n      <button onClick={play}>Play</button>\r\n      <button onClick={stop}>Stop</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Roll;\r\n","import React, { useState } from 'react';\r\nimport './Oscillator.css';\r\n\r\nfunction Oscillator({ oscillator, setOscillator, index }) {\r\n  const [waveType, setWaveType] = useState(oscillator.waveType);\r\n  const [tune, setTune] = useState(oscillator.tune);\r\n  const [fineTune, setFineTune] = useState(oscillator.fineTune);\r\n\r\n  const handleWaveType = (e) => {\r\n    const val = e.target.value;\r\n    setWaveType(val);\r\n    oscillator.setWaveType(val);\r\n    setOscillator(oscillator, index);\r\n  }\r\n\r\n  const handleTune = (e) => {\r\n    const val = Number(e.target.value);\r\n    setTune(val);\r\n    oscillator.setTune(val);\r\n    setOscillator(oscillator, index);\r\n  }\r\n\r\n  const handleFineTune = (e) => {\r\n    const val = Number(e.target.value);\r\n    setFineTune(val);\r\n    oscillator.setFineTune(val);\r\n    setOscillator(oscillator, index);\r\n  }\r\n\r\n  return (\r\n    <div className=\"synth-oscillator\">\r\n      <select value={waveType} onChange={handleWaveType}>\r\n        <option value=\"sine\">Sine</option>\r\n        <option value=\"square\">Square</option>\r\n        <option value=\"sawtooth\">Sawtooth</option>\r\n        <option value=\"triangle\">Triangle</option>\r\n      </select>\r\n      <div>\r\n        <input type=\"range\" min=\"-24\" max=\"24\" value={tune} onChange={handleTune}/> {tune}st\r\n      </div>\r\n      <div>\r\n       <input type=\"range\" min=\"-100\" max=\"100\" value={fineTune} onChange={handleFineTune}/> {fineTune}ct\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Oscillator;\r\n","import React from 'react';\r\nimport Oscillator from './Oscillator.js';\r\nimport './OscillatorContainer.css';\r\n\r\nfunction OscillatorContainer({ oscillators, newOscillator, setOscillator, patchId }) {\r\n  return (\r\n    <div className=\"synth-oscillator-container\">\r\n      {oscillators.map((osc, index) => <Oscillator oscillator={osc} key={patchId + index} setOscillator={setOscillator} index={index}></Oscillator>)}\r\n      <button onClick={newOscillator}>+</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OscillatorContainer;\r\n","import React from 'react';\r\nimport OscillatorContainer from './OscillatorContainer.js';\r\nimport './Patch.css';\r\n\r\nfunction Patch({ patch, setPatch, patchId }) {\r\n  const handleName = (e) => {\r\n    const val = e.target.value;\r\n    patch.setName(val);\r\n    setPatch(patch);\r\n  }\r\n\r\n  const newOscillator = () => {\r\n    patch.newOscillator();\r\n    setPatch(patch);\r\n  }\r\n\r\n  const setOscillator = (oscillator, index) => {\r\n    const newOscillators = [...patch.oscillators];\r\n    newOscillators[index] = oscillator;\r\n    patch.setOscillators(newOscillators);\r\n    setPatch(patch);\r\n  }\r\n\r\n  return (\r\n    <div className=\"synth-patch\">\r\n      Patch name: <input value={patch.getName()} onChange={handleName}></input>\r\n      <OscillatorContainer oscillators={patch.oscillators} newOscillator={newOscillator} setOscillator={setOscillator} patchId={patchId}></OscillatorContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patch;\r\n","import React, { useState } from 'react';\r\nimport Patch from './Patch.js';\r\nimport './PatchContainer.css';\r\n\r\nfunction PatchContainer({ patches, setPatch, newPatch }) {\r\n  const [currentPatch, setCurrentPatch] = useState(-1);\r\n\r\n  const createNewPatch = () => {\r\n    setCurrentPatch(patches.length);\r\n    newPatch();\r\n  }\r\n\r\n  const handlePatchSelect = (e) => {\r\n    const val = Number(e.target.value);\r\n    setCurrentPatch(val);\r\n  }\r\n\r\n  const getPatch = () => {\r\n    if(currentPatch >= 0) {\r\n      const patch = patches[currentPatch];\r\n      return (\r\n        <Patch patch={patch} setPatch={setPatch} patchId={patch.getId()}></Patch>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"synth-patch-container\">\r\n      <div className=\"synth-patch-container-selector\">\r\n        <select onChange={handlePatchSelect} value={currentPatch}>\r\n          {patches.map((patch, index) => <option value={index} key={index}>{patch.name}</option>)}\r\n        </select>\r\n        <button onClick={createNewPatch}>+</button>\r\n      </div>\r\n      <div className=\"synth-patch-container-editor\">\r\n        {getPatch()}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatchContainer;\r\n","import React from 'react';\r\nimport PatchContainer from './PatchContainer.js';\r\nimport './Synth.css';\r\n\r\nfunction Synth({ patches, setPatch, newPatch }) {\r\n  return (\r\n    <div className=\"synth\">\r\n      <PatchContainer patches={patches} setPatch={setPatch} newPatch={newPatch}></PatchContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Synth;\r\n","import React, { useState } from 'react';\nimport Roll from './components/roll/Roll.js';\nimport Synth from './components/synth/Synth.js';\nimport PatchModel from './models/synth/patch.js';\nimport './App.css';\n\nfunction App() {\n  const [patches, setPatches] = useState([]);\n\n  const setPatch = (patch) => {\n    const newPatches = [...patches];\n    const currentPatch = newPatches.findIndex(p => p.getId() === patch.getId());\n    newPatches[currentPatch] = patch;\n    setPatches(newPatches);\n  }\n\n  const newPatch = () => {\n    setPatches([...patches, new PatchModel()]);\n  }\n\n  return (\n    <div className=\"app\">\n      <Synth patches={patches} setPatch={setPatch} newPatch={newPatch}></Synth>\n      <Roll patches={patches}></Roll>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}