{"version":3,"sources":["waves/waveFunctions.js","components/roll/DisplaySettings.js","noteColors.js","components/roll/NoteSettings.js","constants.js","tones.js","Note.js","components/roll/Display.js","waves/generateTone.js","wav/WAVWriter.js","components/roll/Generator.js","components/roll/Roll.js","App.js","index.js"],"names":["sine","freq","t","Math","sin","PI","square","sign","sawtooth","floor","triangle","abs","DisplaySettings","setNewNoteLength","setBeatDivision","setTempo","setWaveFunction","useState","noteLength","setNoteLength","beats","setBeats","bpm","setBpm","func","setFunc","className","value","onChange","e","val","target","Object","keys","waveFunctions","map","x","NoteSettings","notes","draw","deleteNotes","tuningOffset","setTuningOffset","length","setLength","useEffect","getLength","onClick","SAMPLES","VOLUME","PX_TO_BEAT","PX_TO_TONE","A4","toneArray","reverse","toneNames","Note","y","this","width","height","offset","getX","getY","colors","waveNames","noteColors","i","Display","setNotes","tempo","canvas","useRef","selectedNotes","setSelectedNotes","ctrlDown","setCtrlDown","newNoteLength","beatDivision","waveFunction","ctx","current","getContext","clearRect","font","lineWidth","strokeStyle","beginPath","moveTo","lineTo","WIDTH_UNITS","stroke","TONES","note","fillStyle","fillRect","includes","strokeRect","fillText","getMouseCoords","rect","getBoundingClientRect","clientX","left","clientY","top","ref","tabIndex","coords","inRect","snapX","snapY","onKeyDown","key","onKeyUp","filter","generateTone","arr","push","numberToBytes","num","numberOfBytes","bytes","Array","fill","byte","stringToBytes","str","split","c","charCodeAt","pushBigEndian","content","pushLittleEndian","getWAV","waveData","size","pushHeaders","pushWaveData","byteArray","Uint8Array","blob","Blob","type","window","URL","createObjectURL","Generator","setWaveData","normalize","max","reduce","SIZE","setTimeout","getOffset","wave","getTone","normalizedArr","src","controls","Roll","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ac0c3f5.chunk.js","sourcesContent":["export const sine = (freq, t) => Math.sin(2 * Math.PI * freq * t);\r\n\r\nexport const square = (freq, t) => Math.sign(sine(freq, t));\r\n\r\nexport const sawtooth = (freq, t) => 2 * (t * freq - Math.floor(1/2 + t * freq));\r\n\r\nexport const triangle = (freq, t) => 2 * Math.abs(sawtooth(freq, t)) - 1;","import React, { useState } from 'react';\r\nimport * as waveFunctions from '../../waves/waveFunctions.js';\r\nimport './DisplaySettings.css';\r\n\r\nfunction DisplaySettings({ setNewNoteLength, setBeatDivision, setTempo, setWaveFunction }) {\r\n  const [noteLength, setNoteLength] = useState(1);\r\n  const [beats, setBeats] = useState(4);\r\n  const [bpm, setBpm] = useState(60);\r\n  const [func, setFunc] = useState('sine');\r\n\r\n  const noteLengthHandler = (e) => {\r\n    const val = e.target.value;\r\n    setNoteLength(val);\r\n    setNewNoteLength(val);\r\n  }\r\n\r\n  const beatsHandler = (e) => {\r\n    const val = e.target.value;\r\n    setBeats(val);\r\n    setBeatDivision(val);\r\n  }\r\n\r\n  const bpmHandler = (e) => {\r\n    const val = e.target.value;\r\n    setBpm(val);\r\n    setTempo(val);\r\n  }\r\n\r\n  const waveHandler = (e) => {\r\n    const val = e.target.value;\r\n    setFunc(val);\r\n    setWaveFunction(val);\r\n  }\r\n\r\n  return (\r\n    <div className=\"display-settings\">\r\n      New note length <input value={noteLength} onChange={noteLengthHandler}></input>beats.<br />\r\n      Beat division <input value={beats} onChange={beatsHandler}></input>.<br />\r\n      Tempo <input value={bpm} onChange={bpmHandler}></input>bpm.<br />\r\n      Wave <select value={func} onChange={waveHandler}>\r\n        {Object.keys(waveFunctions).map(x => <option value={x} key={x}>{x}</option>)}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplaySettings;\r\n","import * as waveFunctions from './waves/waveFunctions.js';\r\n\r\nconst colors = ['#0c0', '#c00', '#cc0', '#00c'];\r\nconst waveNames = Object.keys(waveFunctions);\r\nconst noteColors = {};\r\n\r\nfor(let i = 0; i < colors.length; i++) {\r\n  noteColors[waveNames[i]] = colors[i];\r\n}\r\n\r\nexport default noteColors;","import React, { useState, useEffect } from 'react';\r\nimport './NoteSettings.css';\r\n\r\nfunction NoteSettings({ notes, draw, deleteNotes }) {\r\n  const [tuningOffset, setTuningOffset] = useState(0);\r\n  const [length, setLength] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTuningOffset(notes[0].tuningOffset);\r\n    setLength(notes[0].getLength());\r\n  }, [notes])\r\n\r\n  const handleTuningOffset = (e) => {\r\n    const value = e.target.value;\r\n    setTuningOffset(value);\r\n    for(const note of notes) {\r\n      note.setTuningOffset(value);\r\n    }\r\n    draw();\r\n  }\r\n\r\n  const handleLength = (e) => {\r\n    const value = e.target.value;\r\n    setLength(value);\r\n    for(const note of notes) {\r\n      note.setLength(value);\r\n    }\r\n    draw();\r\n  }\r\n\r\n  return (\r\n    <div className=\"note-settings\">\r\n      Tuning offset <input value={tuningOffset} onChange={handleTuningOffset}></input> cents.<br />\r\n      Length <input value={length} onChange={handleLength}></input>beats.<br />\r\n      <button onClick={deleteNotes}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NoteSettings;\r\n","export const SAMPLES = 44100;\r\nexport const VOLUME = 25 * (32767/100);\r\n\r\nexport const PX_TO_BEAT = 20 * 4;\r\nexport const PX_TO_TONE = 20;","export const A4 = 440;\r\nexport const AS4 = A4 * (2**(1/12));\r\nexport const B4 = A4 * (2**(2/12));\r\nexport const C5 = A4 * (2**(3/12));\r\nexport const CS5 = A4 * (2**(4/12));\r\nexport const D5 = A4 * (2**(5/12));\r\nexport const DS5 = A4 * (2**(6/12));\r\nexport const E5 = A4 * (2**(7/12));\r\nexport const F5 = A4 * (2**(8/12));\r\nexport const FS5 = A4 * (2**(9/12));\r\nexport const G5 = A4 * (2**(10/12));\r\nexport const GS5 = A4 * (2**(11/12));\r\n\r\nexport const toneArray = [A4, AS4, B4, C5, CS5, D5, DS5, E5, F5, FS5, G5, GS5].reverse();\r\nexport const toneNames = ['A4', 'A♯4', 'B4', 'C5', 'C♯5', 'D5', 'D♯5', 'E5', 'F5', 'F♯5', 'G5', 'G♯5'].reverse();","import { PX_TO_BEAT, PX_TO_TONE } from './constants.js';\r\nimport { toneArray } from './tones.js';\r\n\r\nclass Note {\r\n  constructor(x, y, length, func) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = PX_TO_BEAT * length;\r\n    this.height = PX_TO_TONE;\r\n    this.tuningOffset = 0;\r\n    this.length = length;\r\n    this.func = func;\r\n  }\r\n\r\n  getX() {\r\n    return this.x;\r\n  }\r\n\r\n  getY() {\r\n    return this.y - (this.tuningOffset/100 * PX_TO_TONE);\r\n  }\r\n\r\n  getOffset() {\r\n    return this.x / PX_TO_BEAT;\r\n  }\r\n\r\n  getTone() {\r\n    return toneArray[this.y / PX_TO_TONE] * (2**(this.tuningOffset/1200));\r\n  }\r\n\r\n  getLength() {\r\n    return this.length;\r\n  }\r\n\r\n  setLength(length) {\r\n    this.length = length;\r\n    this.width = PX_TO_BEAT * length;\r\n  }\r\n\r\n  setTuningOffset(offset) {\r\n    this.tuningOffset = offset;\r\n  }\r\n\r\n  inRect(x, y) {\r\n    return (x >= this.getX()) && (x <= this.getX() + this.width) && (y >= this.getY()) && (y <= this.getY() + this.height);\r\n  }\r\n}\r\n\r\nexport default Note;","import React, { useRef, useEffect, useState } from 'react';\r\nimport './Display.css';\r\nimport DisplaySettings from './DisplaySettings.js';\r\nimport NoteSettings from './NoteSettings.js';\r\nimport Note from '../../Note.js';\r\nimport noteColors from '../../noteColors.js';\r\nimport { toneNames } from '../../tones.js';\r\nimport { PX_TO_BEAT, PX_TO_TONE } from '../../constants.js';\r\n\r\nconst TONES = 12;\r\nconst WIDTH_UNITS = 20;\r\nconst HEIGHT = TONES * PX_TO_TONE;\r\nconst WIDTH = WIDTH_UNITS * 20;\r\nconst BEATS = 5;\r\n\r\nfunction Display({ notes, setNotes, tempo, setTempo }) {\r\n  const canvas = useRef(null);\r\n  const [selectedNotes, setSelectedNotes] = useState([]);\r\n  const [ctrlDown, setCtrlDown] = useState(false);\r\n  const [newNoteLength, setNewNoteLength] = useState(1);\r\n  const [beatDivision, setBeatDivision] = useState(4);\r\n  const [waveFunction, setWaveFunction] = useState('sine');\r\n\r\n  const draw = () => {\r\n    const ctx = canvas.current.getContext('2d');\r\n    ctx.clearRect(0, 0, canvas.current.width, canvas.current.height);\r\n    ctx.font = '16px sans-serif';\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#666';\r\n    for(let i = 1; i < TONES; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(0, PX_TO_TONE * i + 0.5);\r\n      ctx.lineTo(WIDTH, PX_TO_TONE * i +0.5);\r\n      ctx.stroke();\r\n    }\r\n    for(let i = 1; i < BEATS * beatDivision; i++) {\r\n      ctx.beginPath();\r\n      ctx.moveTo(PX_TO_BEAT/beatDivision * i + 0.5, 0);\r\n      ctx.lineTo(PX_TO_BEAT/beatDivision * i + 0.5, HEIGHT);\r\n      ctx.stroke();\r\n    }\r\n    for(const note of notes) {\r\n      ctx.fillStyle = noteColors[note.func];\r\n      ctx.fillRect(note.getX() + 2, note.getY() + 2, note.width - 3, note.height - 3);\r\n      ctx.strokeStyle = (selectedNotes.includes(note)) ? '#900' : '#666';\r\n      ctx.lineWidth = 2;\r\n      ctx.strokeRect(note.getX() + 2.5, note.getY() + 2.5, note.width - 4, note.height - 4);\r\n    }\r\n    ctx.fillStyle = '#000';\r\n    for(let i = 0; i < TONES; i++) {\r\n      ctx.fillText(toneNames[i], 0, PX_TO_TONE * (i + 1) - 4);\r\n    }\r\n  }\r\n\r\n  const clickHandler = (e) => {\r\n    const coords = getMouseCoords(e);\r\n    for(const note of notes) {\r\n      if(note.inRect(coords.x, coords.y)) {\r\n        if(ctrlDown) {\r\n          setSelectedNotes(selectedNotes => [...selectedNotes, note]);\r\n        }\r\n        else {\r\n          setSelectedNotes([note]);\r\n        }\r\n        draw();\r\n        return;\r\n      }\r\n    }\r\n    const snapX = Math.floor((coords.x)/(PX_TO_BEAT/beatDivision)) * (PX_TO_BEAT/beatDivision);\r\n    const snapY = Math.floor((coords.y)/WIDTH_UNITS) * WIDTH_UNITS;\r\n    setNotes([...notes, new Note(snapX, snapY, newNoteLength, waveFunction)])\r\n    setSelectedNotes([]);\r\n    draw();\r\n  }\r\n\r\n  const getMouseCoords = (e) => {\r\n    const rect = e.target.getBoundingClientRect();\r\n    const mouseX = e.clientX - rect.left;\r\n    const mouseY = e.clientY - rect.top;\r\n    return {\r\n      x: mouseX,\r\n      y: mouseY,\r\n    };\r\n  }\r\n\r\n  const keyDownHandler = (e) => {\r\n    if(e.key === \"Control\") {\r\n      setCtrlDown(true);\r\n    }\r\n  }\r\n\r\n  const keyUpHandler = (e) => {\r\n    if(e.key === \"Control\") {\r\n      setCtrlDown(false);\r\n    }\r\n  }\r\n\r\n  const clear = () => {\r\n    setNotes([]);\r\n    setSelectedNotes([]);\r\n    draw();\r\n  }\r\n\r\n  const deleteNotes = () => {\r\n    setNotes(notes.filter(note => !selectedNotes.includes(note)));\r\n    setSelectedNotes([]);\r\n  }\r\n\r\n  const newNoteLengthHandler = (val) => {\r\n    setNewNoteLength(val);\r\n  }\r\n\r\n  const beatDivisionHandler = (val) => {\r\n    setBeatDivision(val);\r\n  }\r\n\r\n  const tempoHandler = (val) => {\r\n    setTempo(val);\r\n  }\r\n\r\n  const waveFunctionHandler = (val) => {\r\n    setWaveFunction(val);\r\n  }\r\n\r\n  useEffect(() => draw());\r\n\r\n  return (\r\n    <div className=\"display\">\r\n      <DisplaySettings setNewNoteLength={newNoteLengthHandler} setBeatDivision={beatDivisionHandler}\r\n                       setTempo={tempoHandler} setWaveFunction={waveFunctionHandler}></DisplaySettings>\r\n      <div className=\"display-canvas\">\r\n        <canvas ref={canvas} width={WIDTH} height={HEIGHT} tabIndex=\"0\"\r\n                onClick={clickHandler} onKeyDown={keyDownHandler} onKeyUp={keyUpHandler}></canvas>\r\n        <button onClick={clear}>Clear</button>\r\n      </div>\r\n      {(selectedNotes.length > 0) && <NoteSettings notes={selectedNotes} draw={draw} deleteNotes={deleteNotes}></NoteSettings>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Display;\r\n","import { SAMPLES, VOLUME } from '../constants.js';\r\n\r\nfunction generateTone(freq, length, func) {\r\n  const arr = []\r\n  for(let i = 0; i < SAMPLES * length; i++) {\r\n      const val = Math.floor(func(freq, i/SAMPLES) * VOLUME);\r\n      arr.push(val, val);\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport default generateTone;","import { SAMPLES } from '../constants.js';\r\n\r\nfunction numberToBytes(num, numberOfBytes) {\r\n  const bytes = new Array(numberOfBytes).fill(0);\r\n  for(let i = 0; i < numberOfBytes; i++) {\r\n      const byte = (num >> (8*i)) & 0xFF;\r\n      bytes[i] = byte;\r\n  }\r\n  bytes.reverse();\r\n  return bytes;\r\n}\r\n\r\nfunction stringToBytes(str) {\r\n  return str.split('').map(c => c.charCodeAt(0));\r\n}\r\n\r\nfunction pushBigEndian(arr, content) {\r\n  for(const val of content) {\r\n      arr.push(val);\r\n  }\r\n}\r\n\r\nfunction pushLittleEndian(arr, content) {\r\n  for(let i = content.length - 1; i >= 0; i--) {\r\n      arr.push(content[i]);\r\n  }\r\n}\r\n\r\nfunction pushWaveData(arr, waveData) {\r\n  for(const val of waveData) {\r\n      pushLittleEndian(arr, numberToBytes(val, 2));\r\n  }\r\n}\r\n\r\nfunction pushHeaders(arr, size) {\r\n  pushBigEndian(arr, stringToBytes(\"RIFF\"));\r\n  pushLittleEndian(arr, numberToBytes(36 + size, 4));\r\n  pushBigEndian(arr, stringToBytes(\"WAVE\"));\r\n  pushBigEndian(arr, stringToBytes(\"fmt \"));\r\n  pushLittleEndian(arr, numberToBytes(16, 4));\r\n  pushLittleEndian(arr, numberToBytes(1, 2));\r\n  pushLittleEndian(arr, numberToBytes(2, 2));\r\n  pushLittleEndian(arr, numberToBytes(SAMPLES, 4));\r\n  pushLittleEndian(arr, numberToBytes(SAMPLES * 4, 4));\r\n  pushLittleEndian(arr, numberToBytes(4, 2));\r\n  pushLittleEndian(arr, numberToBytes(16, 2));\r\n  pushBigEndian(arr, stringToBytes(\"data\"));\r\n  pushLittleEndian(arr, numberToBytes(size, 4));\r\n}\r\n\r\nfunction getWAV(waveData, size) {\r\n  const arr = [];\r\n\r\n  pushHeaders(arr, size);\r\n  pushWaveData(arr, waveData);\r\n    \r\n  const byteArray = new Uint8Array(arr);\r\n  const blob = new Blob([byteArray], { type: 'application/octet-stream' });\r\n\r\n  return window.URL.createObjectURL(blob);\r\n}\r\n\r\nexport default getWAV;","import React, { useState } from 'react';\r\nimport './Generator.css';\r\nimport generateTone from '../../waves/generateTone.js';\r\nimport * as waveFunctions from '../../waves/waveFunctions.js';\r\nimport getWAV from '../../wav/WAVWriter.js';\r\nimport { SAMPLES, VOLUME } from '../../constants.js';\r\n\r\nfunction Generator({ notes, tempo }) {\r\n  let [waveData, setWaveData] = useState(null);\r\n  const clickHandler = () => {\r\n    const LENGTH = 5 / (tempo/60);\r\n    const SIZE = SAMPLES * 4 * LENGTH;\r\n    setWaveData(0);\r\n    setTimeout(() => {\r\n      const arr = new Array(SIZE).fill(0);\r\n      for(const note of notes) {\r\n        const offset = note.getOffset() / (tempo/60);\r\n        const wave = generateTone(note.getTone(), note.getLength() / (tempo/60), waveFunctions[note.func]);\r\n        for(let i = 0; i < wave.length; i++) {\r\n          const arrIndex = Math.floor(SAMPLES * 2 * offset) + i;\r\n          arr[arrIndex] += wave[i];\r\n        }\r\n      }\r\n      const normalizedArr = normalize(arr);\r\n      setWaveData(getWAV(normalizedArr, SIZE));\r\n    }, 0);\r\n  }\r\n\r\n  const normalize = (arr) => {\r\n    const max = arr.reduce((max, x) => Math.max(max, x), 0);\r\n    if(max > VOLUME) {\r\n      return arr.map(x => Math.floor(x * (VOLUME/max)));\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  const getAudio = () => {\r\n    if(waveData) {\r\n      return <audio src={waveData} controls></audio>;\r\n    }\r\n    if(waveData === 0) {\r\n      return <div>Generating...</div>\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"generator\">\r\n      <button onClick={clickHandler}>Generate!</button>\r\n      {getAudio()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Generator;\r\n","import React, { useState } from 'react';\r\nimport Display from './Display.js';\r\nimport Generator from './Generator.js';\r\n\r\nfunction Roll() {\r\n  const [notes, setNotes] = useState([]);\r\n  const [tempo, setTempo] = useState(60);\r\n\r\n  return (\r\n    <div>\r\n      <Display notes={notes} setNotes={setNotes} tempo={tempo} setTempo={setTempo}></Display>\r\n      <Generator notes={notes} tempo={tempo}></Generator>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Roll;\r\n","import Roll from './components/roll/Roll.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Roll></Roll>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}